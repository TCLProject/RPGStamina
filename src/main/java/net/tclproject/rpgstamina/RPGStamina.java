package net.tclproject.rpgstamina;

import java.util.Collections;
import java.util.Random;

import cpw.mods.fml.common.Loader;
import cpw.mods.fml.common.Optional;
import cpw.mods.fml.common.event.FMLServerStartingEvent;
import net.tclproject.rpgstamina.mechanics.bauble.ItemEnduranceRing;
import net.tclproject.rpgstamina.mechanics.command.Command;
import net.tclproject.rpgstamina.client.GuiHealthStamina;
import net.tclproject.rpgstamina.config.Config;
import net.tclproject.rpgstamina.mechanics.enchant.EnchantmentLightFeet;
import net.tclproject.rpgstamina.mechanics.potion.PotionEndurance;
import net.tclproject.rpgstamina.mechanics.potion.PotionEnduranceItem;
import net.tclproject.rpgstamina.network.Network;

import cpw.mods.fml.common.FMLCommonHandler;
import cpw.mods.fml.common.Mod;
import cpw.mods.fml.common.Mod.Instance;
import cpw.mods.fml.common.event.FMLInitializationEvent;
import cpw.mods.fml.common.event.FMLPostInitializationEvent;
import cpw.mods.fml.common.event.FMLPreInitializationEvent;
import cpw.mods.fml.common.registry.GameRegistry;
import net.minecraft.client.Minecraft;
import net.minecraft.enchantment.Enchantment;
import net.minecraft.init.Items;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraft.launchwrapper.Launch;
import net.minecraft.potion.Potion;
import net.minecraft.util.EnumChatFormatting;
import net.minecraftforge.common.MinecraftForge;
import net.minecraftforge.oredict.ShapedOreRecipe;
import net.minecraftforge.oredict.ShapelessOreRecipe;


@Mod(name = ModProperties.NAME, modid = ModProperties.MODID, version = ModProperties.VERSION, guiFactory = ModProperties.GUI_FACTORY_CLASS, useMetadata = true, dependencies = "required-after:MysteriumLib")
public class RPGStamina {

    @Instance(ModProperties.MODID)
    public static RPGStamina INSTANCE;

    public static EventHandler EVENT_HANDLER;

    public static Enchantment lightFeet;
    public static Potion endurance;
    public static Item endurancePot, enduranceRing;

    public static boolean isRunningInDevEnvironment;

    @Mod.EventHandler
    public void preInit(FMLPreInitializationEvent event) {
    // Event called at the beginning of the mod's organisation.

        INSTANCE = this;

        // Registers the event handler.
        EVENT_HANDLER = new EventHandler();
        MinecraftForge.EVENT_BUS.register(EVENT_HANDLER);
        FMLCommonHandler.instance().bus().register(EVENT_HANDLER);

        Config.configFolder = event.getModConfigurationDirectory().toString(); // Sets the config folder

        makeFancyModInfo(event); // Creates the nice looking mod info page.
    }

    public void makeFancyModInfo(FMLPreInitializationEvent event) {
    // The following will overwrite the mcmod.info file so the info page looks good.
    // Adapted from Jabelar's Magic Beans and AstroTibs's OptionsEnforcer.

        // This will stop Forge from complaining about missing mcmod.info (just in case i forget it).
        event.getModMetadata().autogenerated = false;

        event.getModMetadata().name = ModProperties.COLORED_NAME; // Mod name
        event.getModMetadata().version = ModProperties.COLORED_VERSION; // Mod version
        event.getModMetadata().credits = ModProperties.CREDITS; // Mod credits

        // Author list
        event.getModMetadata().authorList.clear();
        Collections.addAll(event.getModMetadata().authorList, ModProperties.AUTHORS);

        event.getModMetadata().url = ModProperties.COLORED_URL; // Mod URL

        // Mod description
        event.getModMetadata().description = ModProperties.DESCRIPTION + "\n\n" + EnumChatFormatting.DARK_GRAY + EnumChatFormatting.ITALIC +
                                             ModProperties.SPLASH_OF_THE_DAY[(new Random()).nextInt(ModProperties.SPLASH_OF_THE_DAY.length)] ;

        if (ModProperties.LOGO != null) event.getModMetadata().logoFile = ModProperties.LOGO; // Mod logo
    }



    @Mod.EventHandler
    public void init(FMLInitializationEvent event) {
    // Event called in the middle of the mod's initialisation.

        Network.init();
    }
    
    @Mod.EventHandler
    public void postInit(FMLPostInitializationEvent event) {
    // Event called at the end of the mod's initialisation.

    	isRunningInDevEnvironment = (Boolean)Launch.blackboard.get("fml.deobfuscatedEnvironment"); // Creates a boolean to check if we're running in a dev environment.

        Config.init(); // Creates the config

        if (Config.enchantmentEnabled) lightFeet = new EnchantmentLightFeet(Config.enchantmentID, 5);

        if (Config.potionEnabled) {
            endurance = new PotionEndurance(Config.potionID);
            endurancePot = new PotionEnduranceItem().setUnlocalizedName("staminaEndurance").setTextureName("rpgstamina:potion_endurance");

            GameRegistry.registerItem(endurancePot, "staminaEndurance");
            GameRegistry.addRecipe(new ShapelessOreRecipe(new ItemStack(endurancePot), new ItemStack(Items.experience_bottle), Items.golden_carrot));

            if (Loader.isModLoaded("Baubles") && Config.baubleEnabled) baublesRegister();
        }

        if (Config.enableBlazeRodRender) Items.blaze_rod.setFull3D(); // Makes the blaze rod item 3D (Might move to another mod as it's not related).

        // Registers the HUD bar if on the client side.
    	if (FMLCommonHandler.instance().getEffectiveSide().isClient()) MinecraftForge.EVENT_BUS.register(new GuiHealthStamina());
    }


    @Optional.Method(modid = "Baubles")
    public static void baublesRegister() {
        // Registers the endurance ring with baubles.

        enduranceRing = new ItemEnduranceRing().setUnlocalizedName("staminaRing").setTextureName("rpgstamina:ring_endurance");
        GameRegistry.registerItem(enduranceRing, "staminaRing");
        GameRegistry.addRecipe(new ShapedOreRecipe(new ItemStack(enduranceRing, 1), " E ", "AIA", " P ", 'E', Items.emerald, 'A', Items.golden_apple, 'P', endurancePot, 'I', Items.iron_ingot));
    }

    @Mod.EventHandler
    public void serverStart(FMLServerStartingEvent event) {
    // Event called while starting the server.
    // Used to register the custom command.

        if (Config.commandEnabled) event.registerServerCommand(new Command());
    }
}
